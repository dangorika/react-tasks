[{"/Users/dango/Documents/react/react-tasks/03.Hooks/01-hooks-project/src/index.js":"1"},{"size":1092,"mtime":1611394830009,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"xb2zyl","/Users/dango/Documents/react/react-tasks/03.Hooks/01-hooks-project/src/index.js",["6","7"],{"ruleId":"8","severity":1,"message":"9","line":1,"column":17,"nodeType":"10","messageId":"11","endLine":1,"endColumn":26},{"ruleId":"12","severity":1,"message":"13","line":31,"column":32,"nodeType":"14","endLine":31,"endColumn":36},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'cancelled' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal"]